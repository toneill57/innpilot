#!/usr/bin/env tsx
/**
 * Build-time script: Pre-render Welcome Message to static HTML
 *
 * Purpose:
 * - Extract welcome message markdown to static HTML at build time
 * - Enable optimal LCP (<1.5s) by serving pre-rendered content
 * - Maintain consistency by using same ReactMarkdown renderer
 * - Allow welcome message editing as simple string (DX)
 *
 * Architecture:
 * - Runs during `npm run build` (via prebuild script)
 * - Uses react-markdown in Node.js (SSR)
 * - Outputs TypeScript file with raw + HTML exports
 * - ChatMobile.tsx uses static HTML for welcome, lazy ReactMarkdown for rest
 *
 * Performance impact:
 * - LCP: 7.1s → <1.5s ✅
 * - Bundle size: No change (ReactMarkdown still lazy loaded)
 * - TBT: No change (no eager loading overhead)
 */

import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'
import { renderToStaticMarkup } from 'react-dom/server'
import ReactMarkdown from 'react-markdown'
import remarkGfm from 'remark-gfm'
import React from 'react'

// ES module compatibility
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// Welcome message content (edit here to change message)
const WELCOME_MESSAGE = `**¡Hola! Bienvenido a Simmer Down** 🌴

Estoy aquí para ayudarte a encontrar tu alojamiento perfecto en San Andrés.

Para mostrarte las mejores opciones rápidamente, cuéntame tu **fecha de llegada** y **fecha de salida**. ¿Vienes solo, en pareja o con más personas?

---

🗨️ TIP: Puedes hablar conmigo en el idioma que prefieras 🗺️

🏝️ ¡También soy tu guía turística! Pregúntame sobre playas, restaurantes, buceo y todo lo que San Andrés tiene para ofrecerte.`

// Render welcome message to static HTML using ReactMarkdown
const welcomeHtml = renderToStaticMarkup(
  React.createElement(
    ReactMarkdown,
    {
      remarkPlugins: [remarkGfm],
      components: {
        ul: ({ node, ...props }: any) =>
          React.createElement('ul', {
            className: 'list-disc list-inside mb-2 space-y-1 marker:text-xs marker:text-gray-400',
            ...props
          }),
        ol: ({ node, ...props }: any) =>
          React.createElement('ol', {
            className: 'list-decimal list-inside mb-2 space-y-1 marker:text-xs marker:text-gray-400',
            ...props
          }),
        li: ({ node, ...props }: any) =>
          React.createElement('li', { className: 'ml-2', ...props }),
        hr: ({ node, ...props }: any) =>
          React.createElement('hr', { className: 'my-3 border-gray-300', ...props }),
        strong: ({ node, ...props }: any) =>
          React.createElement('strong', { className: 'font-semibold text-gray-900', ...props }),
      }
    },
    WELCOME_MESSAGE
  )
)

// Generate TypeScript module
const outputContent = `// Auto-generated by scripts/build-welcome-message.ts
// DO NOT EDIT - Edit scripts/build-welcome-message.ts instead

/**
 * Welcome message for Guest Chat
 *
 * - WELCOME_MESSAGE_RAW: Original markdown string (for editing, testing)
 * - WELCOME_MESSAGE_HTML: Pre-rendered HTML (for optimal LCP)
 *
 * To update:
 * 1. Edit WELCOME_MESSAGE in scripts/build-welcome-message.ts
 * 2. Run: npm run build (or tsx scripts/build-welcome-message.ts)
 * 3. Commit both script + generated file
 */

export const WELCOME_MESSAGE_RAW = ${JSON.stringify(WELCOME_MESSAGE)}

export const WELCOME_MESSAGE_HTML = ${JSON.stringify(welcomeHtml)}
`

// Write to src/lib/welcome-message-static.ts
const outputPath = path.join(__dirname, '../src/lib/welcome-message-static.ts')
fs.writeFileSync(outputPath, outputContent, 'utf-8')

console.log('✅ Welcome message pre-rendered successfully!')
console.log(`   Output: ${outputPath}`)
console.log(`   HTML size: ${welcomeHtml.length} bytes`)
